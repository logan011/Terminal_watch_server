#include "widget.h"
#include "ui_widget.h"
#include <qdebug.h>
#include "database.h"
#include<QStyle>
Widget::Widget(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::Widget)
{
  db = new DatabaseManager;
  if( !db->openDB())
      qDebug()<<"Eror Creating Databese";
  if(!db->createTeble1())
      qDebug() << "Unable to create a table";
  if(!db->createTeble2())
      qDebug() << "Unable to create a table";
    countClient = 0;
    countwidget =0;
   QScrollArea  *area = new QScrollArea;
   toolbar = new QMenuBar();
   title = new QHBoxLayout;
   arraygroupbox = new QGroupBox[30];
   layout = new QGridLayout;
   datatoread = new date();
    arrbox= new bord[30];
    label = new QLabel("<H1>Wait for connection...</H!>");
    QString style;
    QFile file("/home/roman/QtProject/TerminalWatchServer/CssStyle");
            if(file.open(QIODevice::ReadOnly))
    {
        style = file.readAll();
        qDebug()<<"Read from CSS";
        file.close();

    }
    title->addWidget(label,0,Qt::AlignCenter);
    setLayout(title);
    area->setWidget(this);
    area->setWidgetResizable(true);
    area->setMinimumHeight(300);
    area->setMinimumWidth(600);
    area->show();
    this->show();
    server = new QTcpServer();
    server->listen(QHostAddress::Any,2323);
    QObject::connect(server,SIGNAL(newConnection()),this,SLOT(slotnewconnection()));
    qApp->setStyleSheet(style);
}
bord * Widget::createbord(bord *arrbox)
{
    arrbox[countClient].money = new QDoubleSpinBox();
    arrbox[countClient].money->setMaximum(200);
    arrbox[countClient].power = new QCheckBox("Power");
    arrbox[countClient].open_out = new QCheckBox("Open out");
    arrbox[countClient].P_temprete = new QProgressBar;
    arrbox[countClient].P_temprete->setValue(20);
    arrbox[countClient].P_water = new QProgressBar;
    arrbox[countClient].P_water->setValue(50000);
    arrbox[countClient].disc= new QPushButton("Disconnect");
    buutonmap.insert(countClient,arrbox[countClient].disc);
    arrbox[countClient].money->setReadOnly(true);
    arrbox[countClient].open_out->setDisabled(true);
    arrbox[countClient].power->setDisabled(true);
    arrbox[countClient].P_temprete->setMaximum(100);
    arrbox[countClient].P_water->setMaximum(50000);
    arrbox[countClient].lastwaterapdate = new QLineEdit();
    arrbox[countClient].lastwatersale = new QLineEdit();
    arrbox[countClient].Voltage12 = new QLineEdit();
    arrbox[countClient].Voltage12->setText("11");
    arrbox[countClient].Voltage5 = new QLineEdit();
    arrbox[countClient].Voltage5->setText("4");
    return arrbox;
}
QGroupBox *Widget::createBox()
{
   arrbox = createbord(arrbox);
    arraygroupbox[countClient].setTitle(tr("Client ") + QString::number(countClient));
    QVBoxLayout *vbox = new QVBoxLayout;
    QHBoxLayout *hbox = new QHBoxLayout;
    vbox->addWidget(new QLabel("Tempreture"));
    vbox->addWidget(arrbox[countClient].P_temprete);
    vbox->addWidget(new QLabel("Water"));
    vbox->addWidget(arrbox[countClient].P_water);
    vbox->addWidget(new QLabel("Money"));
    vbox->addWidget(arrbox[countClient].money);
    vbox->addWidget(new QLabel("Last Water Sale"));
    vbox->addWidget(arrbox[countClient].lastwatersale);
    vbox->addWidget(new QLabel("Last Water Update"));
    vbox->addWidget(arrbox[countClient].lastwaterapdate);
    vbox->addWidget(new QLabel("Voltage 5"));
    vbox->addWidget(arrbox[countClient].Voltage5);
    vbox->addWidget(new QLabel("Voltage 12"));
    vbox->addWidget(arrbox[countClient].Voltage12);
    hbox->addWidget(arrbox[countClient].power);
    hbox->addWidget(arrbox[countClient].open_out);
    hbox->addWidget(arrbox[countClient].disc);
    vbox->addLayout(hbox);
     vbox->addStretch(29);
    arraygroupbox[countClient].setLayout(vbox);
       QObject::connect(arrbox[countClient].disc,SIGNAL(clicked()),this,SLOT(slotDisconFromServer()));
    return  (arraygroupbox+countClient);
}
void Widget::slotnewconnection()
{
    if(!countClient)
    {
        delete title;
        label->hide();
    }
    if(!layout)
    {
     layout = new QGridLayout;
     delete title;
     label->hide();
    }
    pClientSocket = server->nextPendingConnection();
   clientmap.insert(countClient,pClientSocket);
    connect(pClientSocket, SIGNAL(readyRead()),
                this,  SLOT(slotReadClient()));
    if(countwidget < 4){
          layout->addWidget(createBox(),0,countwidget);
      }
      else
          layout->addWidget(createBox(),countwidget/4,countwidget%4);
                  setLayout(layout);
     pClientSocket->write(QByteArray::number(countClient));
     db->insertinttable1( "Client " +QString::number(countClient),"kopernika",QDate::currentDate().toString(Qt::SystemLocaleShortDate) + " "+ QTime::currentTime().toString());
      countClient ++;
      countwidget++;

}
void Widget::slotReadClient()
{
    QTcpSocket* pClientSocket = (QTcpSocket*)sender();
    *datatoread = deserialize(pClientSocket->readAll(),*datatoread);
       switch(datatoread->msg)
       {
       case Money_Dropped:
       {
       arrbox[datatoread->ID].money->setValue(datatoread->CountMoney);
       arrbox[datatoread->ID].P_water->setValue(datatoread->Water_left);
       arrbox[datatoread->ID].Voltage5->setText(QString::number(datatoread->volt5));
       arrbox[datatoread->ID].Voltage12->setText(QString::number(datatoread->volt12));
       arrbox[datatoread->ID].P_temprete->setValue(datatoread->Temprete);
       arrbox[datatoread->ID].lastwatersale->setText(datatoread->timesale);
       if(datatoread->timesale!="")
       db->insertinttable2(QString::number(datatoread->Temprete),QString::number(datatoread->Water_left),QString::number(datatoread->volt5),QString::number(datatoread->volt12),
              QString::number( datatoread->CountMoney),QString::number(datatoread->power),QString::number(datatoread->carry_on),QString::number(datatoread->ID),datatoread->timesale,
            datatoread->timewater);
       break;
       }
        case Options:
       {
           arrbox[datatoread->ID].power ->setChecked(datatoread->power);
           arrbox[datatoread->ID].open_out->setChecked(datatoread->carry_on);
           arrbox[datatoread->ID].lastwaterapdate->setText(datatoread->timewater);
           arrbox[datatoread->ID].Voltage5->setText(QString::number(datatoread->volt5));
            arrbox[datatoread->ID].P_water->setValue(datatoread->Water_left);
           arrbox[datatoread->ID].Voltage12->setText(QString::number(datatoread->volt12));
           db->insertinttable2(QString::number(datatoread->Temprete),QString::number(datatoread->Water_left),QString::number(datatoread->volt5),QString::number(datatoread->volt12),
                  QString::number( datatoread->CountMoney),QString::number(datatoread->power),QString::number(datatoread->carry_on),QString::number(datatoread->ID),datatoread->timesale,
                datatoread->timewater);
           break;
       }
       case Disconnected:
       {
           arraygroupbox[datatoread->ID].hide();
           countClient--;
           if(countClient == 0)
           {
                 title = new QHBoxLayout;
                 title->addWidget(label,0,Qt::AlignCenter);
                 label->show();
                 delete layout;
                 layout = (QGridLayout *)0;
                 setLayout(title);

           }
           break;
       }
       }
}
date &Widget::deserialize(QByteArray array,date &dest)
{
    QDataStream stream(&array,QIODevice::ReadOnly);
    stream.setVersion(QDataStream::Qt_4_5);
    stream >> dest.ID;
       stream >> dest.CountMoney;
       stream>> dest.power;
       stream>>dest.carry_on;
      stream>>dest.Temprete;
       stream>>dest.Water_left;
       stream>>dest.volt5;
       stream>>dest.volt12;
       stream>>dest.msg;
       stream>>dest.timewater;
       stream>>dest.timesale;
       return dest;
}
void Widget::slotDisconFromServer()
{
    int i=0;
 QPushButton* btn = qobject_cast<QPushButton *>(QObject::sender());
 for( ; i<buutonmap.size();i++)
 {
     if(btn == buutonmap.value(i))
        break;
 }
 clientmap[i]->close();
 clientmap.remove(i);
 arraygroupbox[i].hide();
 countClient--;
 if(countClient == 0)
 {
       title = new QHBoxLayout;
       title->addWidget(label,0,Qt::AlignCenter);
       label->show();
       delete layout;
       layout = (QGridLayout *)0;
       setLayout(title);

 }

}
QByteArray Widget::serialize(date packet)
{
    QByteArray data;
    QDataStream out(&data, QIODevice::WriteOnly);
    out <<packet.ID;
    out << packet.CountMoney;
    out<< packet.power;
    out<<packet.carry_on;
    out<<packet.Temprete;
    out<<packet.Water_left;
    out<<packet.volt5;
    out<<packet.volt12;
    out<<packet.msg;
    out<<packet.timewater;
    out<<packet.timesale;
    return data;
}
Widget::~Widget()
{
    delete [] arraygroupbox;
    delete []arrbox;
    delete ui;
}
